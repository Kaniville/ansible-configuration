---
- name: Get file information
  ansible.builtin.stat:
    path: /etc/snapper/configs/root
  register: file_info

- name: Get filesystem type of /
  ansible.builtin.shell: df / --output=fstype | tail -n 1
  register: filesystem_type

- name: Create default configuration
  ansible.builtin.command: snapper -c root create-config /
  ignore_errors: true
  when: file_info.stat.size == 0 and filesystem_type.stdout == 'btrfs'

- name: Add wheel group to usbguard
  ansible.builtin.lineinfile:
    path: /etc/snapper/configs/root
    state: present
    regexp: '^ALLOW_GROUPS='
    line: 'ALLOW_GROUPS="wheel"'
  when: file_info.stat.size != 0 and filesystem_type.stdout == 'btrfs'

- name: Change Snapshots periods
  ansible.builtin.lineinfile:
    path: /etc/snapper/configs/root
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^TIMELINE_LIMIT_HOURLY=', line: 'TIMELINE_LIMIT_HOURLY="5"' }
    - { regexp: '^TIMELINE_LIMIT_DAILY=', line: 'TIMELINE_LIMIT_DAILY="7"' }
    - { regexp: '^TIMELINE_LIMIT_WEEKLY=', line: 'TIMELINE_LIMIT_WEEKLY="0"' }
    - { regexp: '^TIMELINE_LIMIT_MONTHLY=', line: 'TIMELINE_LIMIT_MONTHLY="0"' }
    - { regexp: '^TIMELINE_LIMIT_YEARLY=', line: 'TIMELINE_LIMIT_YEARLY="0"' }
  when: file_info.stat.size != 0 and filesystem_type.stdout == 'btrfs'

- name: Enable Snapper services
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - snapper-timeline.timer
    - snapper-cleanup.timer
    - snapper-boot.timer
  when: file_info.stat.size != 0 and filesystem_type.stdout == 'btrfs'